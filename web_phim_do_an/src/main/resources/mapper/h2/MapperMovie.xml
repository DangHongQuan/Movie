<!-- movie_mapper.xml -->

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.response.admin.AdminMovieRepository">
    <resultMap id="movieResultMap" type="com.example.models.admin.Movie">
        <id property="movieId" column="movie_id" />
        <result property="adult" column="adult" />
        <result property="backdropPath" column="backdrop_path" />
        <result property="belongsToCollection" column="belongs_to_collection" />
        <result property="budget" column="budget" />
        <result property="homePage" column="homeage" />
        <result property="imdbId" column="imdb_id" />
        <result property="originalLanguage" column="original_language" />
        <result property="originalTitle" column="original_title" />
        <result property="overview" column="overview" />
        <result property="popularity" column="popularity" />
        <result property="posterPath" column="poster_path" />
        <result property="releaseDate" column="release_date" />
        <result property="revenue" column="revenue" />
        <result property="runtime" column="runtime" />
        <result property="status" column="status" />
        <result property="tagline" column="tagline" />
        <result property="title" column="title" />
        <result property="video" column="video" />
        <result property="voteAverage" column="vote_average" />
        <result property="voteCount" column="vote_count" />
    </resultMap>

    <insert id="insertMovies" parameterType="com.example.models.admin.Movie">
        INSERT INTO movies (movie_id, adult, backdrop_path, belongs_to_collection, budget, homepage, imdb_id,
            original_language, original_title, overview, popularity, poster_path, release_date, revenue, runtime,
            status, tagline, title, video, vote_average, vote_count)
        VALUES (#{movieId}, #{adult}, #{backdropPath}, #{belongsToCollection}, #{budget}, #{homePage}, #{imdbId},
            #{originalLanguage}, #{originalTitle}, #{overview}, #{popularity}, #{posterPath}, #{releaseDate},
            #{revenue}, #{runtime}, #{status}, #{tagline}, #{title}, #{video}, #{voteAverage}, #{voteCount})
    </insert>

    <select id="listMovie" resultMap="movieResultMap">
    select * from movies
    </select>

    <delete id="deleteMovie">
    delete from movies where movie_id = #{movie_id} 
    </delete>

    <select id="findMovie" resultMap="movieResultMap">
    select * from movies where movie_id = #{movie_id} 
    </select>

   
    <update id="updateMovie" parameterType="com.example.models.admin.Movie">
  UPDATE movies
  SET
    adult = #{adult},
    backdrop_path = #{backdropPath},
    belongs_to_collection = #{belongsToCollection},
    budget = #{budget},
   homePage = #{homePage},
    <!-- homeage = #{homePage}, -->
    imdb_id = #{imdbId},
    original_language = #{originalLanguage},
    original_title = #{originalTitle},
    overview = #{overview},
    popularity = #{popularity},
    poster_path = #{posterPath},
    release_date = #{releaseDate},
    revenue = #{revenue},
    runtime = #{runtime},
    status = #{status},
    tagline = #{tagline},
    title = #{title},
    video = #{video},
    vote_average = #{voteAverage},
    vote_count = #{voteCount}
  WHERE movie_id = #{movieId}
</update>


   

    <!-- Add more SQL queries as needed -->

</mapper>
